name: openwrt packages

on:
  workflow_dispatch:
  repository_dispatch:
    types: [sync]

permissions:
  contents: write

jobs:
  build:
    name: openwrt_packages - [${{ matrix.target }}]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        target:
          - aarch64_generic
          - aarch64_cortex-a53
          - x86_64

    steps:
    - name: Checkout
      continue-on-error: true
      uses: actions/checkout@main
      with:
        ref: ${{ matrix.target }}

    - name: Download Packages
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        if [ "${{ matrix.target }}" = "aarch64_generic" ]; then
            wget https://github.com/QuickWrt/openwrt_packages/releases/download/R201025-aarch64_generic/aarch64_generic-24.10.3.zip -O tmp.zip && unzip tmp.zip -d openwrt && rm -f tmp.zip
        elif [ "${{ matrix.target }}" = "aarch64_cortex-a53" ]; then
            wget https://github.com/QuickWrt/openwrt_packages/releases/download/R201025-aarch64_cortex-a53/aarch64_cortex-a53-24.10.3.zip -O tmp.zip && unzip tmp.zip -d openwrt && rm -f tmp.zip
        elif [ "${{ matrix.target }}" = "x86_64" ]; then
            wget https://github.com/QuickWrt/openwrt_packages/releases/download/R201025-x86_64/x86_64-24.10.3.zip -O tmp.zip && unzip tmp.zip -d openwrt && rm -f tmp.zip
        fi

    - name: Download IPK Packaging Tool
      run: |
        BASE_URL="https://github.com/QuickWrt/Extras-packages/releases/download/tools"
        FILES=("mkhash" "key-build" "kmod-ipk" "kmod-sign")
        for f in "${FILES[@]}"; do
          echo "Downloading $f..."
          curl -L -O "$BASE_URL/$f"
          chmod +x "$f"
        done

    - name: Install Usign
      run: |
        git clone --depth 1 -b master https://github.com/openwrt/usign
        cd usign && mkdir -p build && cd build && cmake .. && make && sudo make install

    - name: Start making
      run: |
        bash kmod-sign openwrt
        
    - name: Git push
      run: |
        git config --global user.email "OPPEN321@users.noreply.github.com"
        git config --global user.name "actions-user"
        [ -d .git ] && git init
        git add --all
        Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        git commit -sm "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" HEAD:${{ matrix.target }}
